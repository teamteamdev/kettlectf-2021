import telebot
import config
from telebot import types
import random
import time

bot = telebot.TeleBot(config.TOKEN)
funny_stories = ['–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ï–ª—å—Ü–∏–Ω –∫–æ–≥–¥–∞ —É –Ω–µ–≥–æ –∫–æ–Ω—á–∞—é—Ç—Å—è —Å–∏–≥–∞—Ä–µ—Ç—ã? –°—Ç—Ä–µ–ª—è–µ—Ç –ø–∞—Ä–ª–∞–º–µ–Ω—Ç.',
                 '–ó–∞—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–ø–∞—Ö–∞ –≤ –±–∞—Ä –∏ –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã. –ù–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –æ–Ω–∞ —Å–Ω–æ–≤–∞ –∑–∞—Ö–æ–¥–∏—Ç –∏ –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞–∫–∞–Ω. –ù–∞ —Ç—Ä–µ—Ç–∏–π –¥–µ–Ω—å —Ç–∞–∫–∞—è –∂–µ —Å–∏—Ç—É–∞—Ü–∏—è. –¢–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–∞–ª–æ—Å—å –≤—Å—é –Ω–µ–¥–µ–ª—é. –ù–∞ —Å–µ–¥—å–º–æ–π –¥–µ–Ω—å –±–∞—Ä–º–µ–Ω —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É —á–µ—Ä–µ–ø–∞—Ö–∏: –£ –Ω–∞—Å —Å—Ç–æ–ª—å–∫–æ –∞–ª–∫–æ–≥–æ–ª—è, –∑–∞—á–µ–º —Ç—ã –≤–æ–¥—É –±–µ—Ä–µ—à—å? –ß–µ—Ä–µ–ø–∞—Ö–∞ –æ—Ç–≤–µ—á–∞–µ—Ç: –£ –º–µ–Ω—è –¥–æ–º –≥–æ—Ä–∏—Ç.',
                 '–ü—Ä–∏—Ö–æ–¥–∏—Ç –æ–¥–∏–Ω –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –¥—Ä—É–≥–æ–º—É: ‚Äî –°–ª—ã—à—å, –ü–µ—Ç—è, –º–Ω–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –Ω—É–∂–µ–Ω. ‚Äî –ß–µ—Ç—ã—Ä–Ω–∞–¥—Ü–∞—Ç—å!',
                 '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç: '
                 '‚Äî –°–∫–∞–∂–∏—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π —á–∞—Å?'
                 '‚Äî ¬´–ö–æ—Ç–æ—Ä—ã–π —á–∞—Å¬ª, –µ—Å–ª–∏ –í–∞—Å —ç—Ç–æ –ø—Ä–∏–∫–∞–ª—ã–≤–∞–µ—Ç.',
                 "‚Äî –ö–∞–∫ –æ—Ç–ª–∏—á–∏—Ç—å –Ω–∞—Ä–∫–æ–º–∞–Ω–∞ –æ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞? ‚Äî –ó–∞–¥–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å ‚Äî —á—Ç–æ –¥–ª—è –≤–∞—Å –∑–Ω–∞—á–∏—Ç —Ñ—Ä–∞–∑–∞:  ‚Äî –û—Ç–¥–∞–π –≤–∏–Ω—Ç, –∞ —Ç–æ —è —Ç–≤–æ—é –º–∞–º—É –ø—Ä–æ–¥–∞–º?",
                 '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –≤–±–µ–≥–∞–µ—Ç –≤ –ø–æ–ª–∏—Ü–∏—é: ‚Äî –£ –º–µ–Ω—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å –ø—Ä–æ–ø–∞–ª! ‚Äî –û–ø—è—Ç—å –≤—ã! –î–∞ –Ω–µ –ø—Ä–æ–ø–∞–ª –æ–Ω –Ω–∏–∫—É–¥–∞, —Å—Ç–æ–∏—Ç –≥–¥–µ –æ—Å—Ç–∞–≤–∏–ª–∏... –ó–∞–ø–æ–º–Ω–∏—Ç–µ, 404 ‚Äî —ç—Ç–æ –µ–≥–æ –≥–æ—Å–Ω–æ–º–µ—Ä!!!',
                 '–û–ø—ã—Ç–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ–≥–¥–∞ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç –Ω–∞–ø—Ä–∞–≤–æ –∏ –Ω–∞–ª–µ–≤–æ, –¥–∞–∂–µ –µ—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç —É–ª–∏—Ü—É —Å –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–º –¥–≤–∏–∂–µ–Ω–∏–µ–º.',
                 '–ó–∞—á–µ–º –Ω—É–∂–Ω–æ –ø–ª–æ—Ö–æ–µ –ü–û? –ë–µ–∑ –Ω–µ–≥–æ —É –º–Ω–æ–≥–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç—ã.',
                 '–û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –±–∞–≥–∏, –¥–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ.',
                 '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∞ 10% –∏–∑ —Å—Ç—Ä–æ–≥–æ–π –Ω–∞—É–∫–∏, –Ω–∞ 20% –∏–∑ —Å–º–µ–∫–∞–ª–∫–∏ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è, –∏ –Ω–∞ 70% –∏–∑ –ø–æ–ø—ã—Ç–æ–∫ —Å–æ–≤–º–µ—Å—Ç–∏—Ç—å –ø–µ—Ä–≤–æ–µ —Å–æ –≤—Ç–æ—Ä—ã–º.',
                 '–ù–µ –ø–æ–º–µ—â–∞—é—Ç—Å—è –º—ã—Å–ª–∏ –≤ –≥–æ–ª–æ–≤–µ? –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∞—Ä—Ö–∏–≤–∞—Ç–æ—Ä–æ–º!',
                 '–¶—ã–≥–∞–Ω–∏ —É–∫—Ä–∞–ª–∏ –º–æ–µ–≥–æ –æ—Ç—Ü–∞, –∑–æ–ª–æ—Ç–æ–π –±—ã–ª —á–µ–ª–æ–≤–µ–∫.'
                 ]


def is_digitalpha(text):
    text = list(text)
    flags = [False, False]
    for i in text:
        if i.isdigit():
            flags[0] = True
        elif not i.isdigit():
            flags[1] = True

    if flags[0] == True and flags[1] == True:
        return True
    else:
        return False


def is_digit(text):
    try:
        text = int(text)
        return True
    except Exception:
        return False


@bot.message_handler(commands=['start'])
def welcome(message):
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton(text='ü•∂–ê–Ω–µ–∫–¥–æ—Ç—ãü•∂',
                                         callback_data='funny stories')
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('ü•∂–ê–Ω–µ–∫–¥–æ—Ç—ãü•∂')
    keyboard.add(item1)
    markup.add(button1)
    bot.send_message(message.chat.id,
                     '–ë–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –¥–ª—è –∫–æ–º–∞–Ω–¥—ã Bad Request, –Ω–æ—Å–∏—Ç —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä. –ü–æ–∫–∞ —á—Ç–æ –æ–Ω —É–º–µ–µ—Ç —á–∏—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–Ω–µ–∫–¥–æ—Ç—ã, –∂–¥–∏—Ç–µ –Ω–æ–≤—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π!',
                     reply_markup=keyboard)


@bot.message_handler(content_types=['text'])
def reply_message(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    item1 = types.InlineKeyboardButton('‚òëÔ∏è', callback_data='correct')
    item2 = types.InlineKeyboardButton('‚ùå', callback_data='incorrect')
    markup.add(item1, item2)

    if message.text == 'ü•∂–ê–Ω–µ–∫–¥–æ—Ç—ãü•∂':
        bot.send_message(message.chat.id, '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–µ–∫–¥–æ—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç, –≤–∞–º –±–æ–ª—å—à–µ 18 –ª–µ—Ç?',
                         reply_markup=markup)
        bot.register_next_step_handler(message, age_validate)

    elif message.text == '–ê–Ω–µ–∫–¥–æ—Ç—ã' or message.text == '–∞–Ω–µ–∫–¥–æ—Ç—ã':
        bot.send_message(message.chat.id, '''Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'by_friends_of_petya_' is not defined
''')
        time.sleep(2)
        bot.send_message(message.chat.id, '‚ò†–ú—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏‚ò†')
    else:
        bot.send_message(message.chat.id, '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—éüò¢')


@bot.message_handler(content_types=['photo'])
def return_flag(message):
    try:
        if message.content_type == 'photo':
            bot.send_message(message.chat.id, '''Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name '5ef1jb81a' is not defined
''')
            time.sleep(2)
            bot.send_message(message.chat.id, '‚ò†–ú—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏‚ò†')

    except Exception:
        print(Exception)


def request_flag(message):
    try:
        if message.text.isalpha():
            bot.send_message(message.chat.id, '{} –æ—Å—Ç–∞—ë—Ç—Å—è –±–µ–∑ —Ñ–ª–∞–≥–∞'.format(message.text))
        else:
            bot.send_message(message.chat.id, ']>¬ß√∂Zq¬â¬ø')
            time.sleep(2)
            bot.send_message(message.chat.id, '‚ò†–ú—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏‚ò†')
            time.sleep(2)
            bot.send_message(message.chat.id, 'flag')
    except Exception:
        print(Exception)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'funny stories':
                bot.register_next_step_handler(call.message.text, age_validate)
            elif call.data == 'correct':
                bot.send_message(call.message.chat.id, ''.join(random.choice(funny_stories)))
                bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
            elif call.data == 'incorrect':
                bot.send_message(call.message.chat.id, '–í—ã —Å–ª–∏—à–∫–æ–º —é–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∫–∞–∫ –ø–æ–¥—Ä–∞—Å—Ç—ë—Ç–µ')
                bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)


    except Exception:
        print(Exception)


def age_validate(message):


    if message.content_type != 'photo':
        if message.text == 'ü•∂–ê–Ω–µ–∫–¥–æ—Ç—ãü•∂' or message.text == '–∞–Ω–µ–∫–¥–æ—Ç—ã' or message.text == '–ê–Ω–µ–∫–¥–æ—Ç—ã':
                print('done')
                reply_message(message)
        else:
            time.sleep(2)
            bot.send_message(message.chat.id, '''Traceback (most recent call last):
      File "\psf\Home\Documents\copy_folder.py", line 4, in <module>
        shutil.copytree(src, dst_sav)
      File "C:\Python39\lib\kettle_problem_bot_", line 177, in copytree
        os.makedirs(dst)
      File "C:\Python39\lib\os.py", line 157, in makedirs
        mkdir(name, mode)''')
            time.sleep(2)
            bot.send_message(message.chat.id, '‚ò†–ú—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏‚ò†')
    else:
        bot.send_message(message.chat.id, '''Traceback (most recent call last):
          File "<input>", line 1, in <module>
        NameError: name '5ef1jb81a' is not defined
        ''')
        time.sleep(2)
        bot.send_message(message.chat.id, '‚ò†–ú—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏‚ò†')


if __name__ == '__main__':
    bot.infinity_polling()
